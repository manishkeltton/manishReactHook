{"ast":null,"code":"var _jsxFileName = \"/var/www/html/manishReactHook/src/components/useEffect/UseEffects1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UseEffects1 = () => {\n  _s();\n\n  const [countn, setCountn] = useState(0); //useState woorking for re-render of whole component\n\n  useEffect(() => {\n    console.log('Hello World');\n\n    if (countn == 0) {\n      document.title = `Chats`;\n    } else {\n      document.title = `Chats (${countn})`;\n    }\n  }, [countn]); // [] -> it means useEffect run at one time & [countn] -> it means useEffect run at a ever \n\n  console.log('Hello outWorld');\n\n  const handlechange = () => {\n    setCountn(countn + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: countn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlechange(),\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UseEffects1, \"feqYxlgqMyuJxaJHv74PNOPG98E=\");\n\n_c = UseEffects1;\nexport default UseEffects1;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseEffects1\");","map":{"version":3,"sources":["/var/www/html/manishReactHook/src/components/useEffect/UseEffects1.js"],"names":["React","useEffect","useState","UseEffects1","countn","setCountn","console","log","document","title","handlechange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,CAAD,CAApC,CAFsB,CAEkB;;AAExCD,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,QAAGH,MAAM,IAAI,CAAb,EAAe;AACXI,MAAAA,QAAQ,CAACC,KAAT,GAAkB,OAAlB;AACH,KAFD,MAEM;AACFD,MAAAA,QAAQ,CAACC,KAAT,GAAkB,UAASL,MAAO,GAAlC;AACH;AAEJ,GARQ,EAQP,CAACA,MAAD,CARO,CAAT,CAJsB,CAYV;;AAERE,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AAEJ,QAAMG,YAAY,GAAG,MAAM;AACvBL,IAAAA,SAAS,CAACD,MAAM,GAAC,CAAR,CAAT;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMM,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA1BD;;GAAMP,W;;KAAAA,W;AA4BN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n\n\nconst UseEffects1 = () => {\n\n    const [countn, setCountn] = useState(0);//useState woorking for re-render of whole component\n\n    useEffect(()=>{\n        console.log('Hello World');\n        if(countn == 0){\n            document.title = `Chats`\n        } else{\n            document.title = `Chats (${countn})`\n        }\n        \n    },[countn]);// [] -> it means useEffect run at one time & [countn] -> it means useEffect run at a ever \n\n        console.log('Hello outWorld');\n    \n    const handlechange = () => {\n        setCountn(countn+1)\n    }\n\n    return (\n        <div>\n            <h1>{countn}</h1>\n            <button onClick={() => handlechange()}>Click me</button>\n        </div>\n    )\n}\n\nexport default UseEffects1\n"]},"metadata":{},"sourceType":"module"}