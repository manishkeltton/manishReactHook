{"ast":null,"code":"var _jsxFileName = \"/var/www/html/manishReactHook/src/components/useEffect/UseEffects1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport useCustomHook from '../customHook/useCustomHook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UseEffects1 = () => {\n  _s();\n\n  const [countn, setCountn] = useState(0); //useState woorking for re-render of whole component\n\n  useCustomHook(countn); // [] -> it means useEffect run at one time \n  // & [countn] -> it means useEffect run at a every moment when will change countn values\n\n  useEffect(() => {\n    console.log(\"other useEffect\");\n  });\n  console.log('Hello outWorld');\n\n  const handlechange = () => {\n    setCountn(countn + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: countn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlechange(),\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UseEffects1, \"8uv6R1Jjr9/15Kg+JzN3eAd5dnU=\", false, function () {\n  return [useCustomHook];\n});\n\n_c = UseEffects1;\nexport default UseEffects1;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseEffects1\");","map":{"version":3,"sources":["/var/www/html/manishReactHook/src/components/useEffect/UseEffects1.js"],"names":["React","useEffect","useState","useCustomHook","UseEffects1","countn","setCountn","console","log","handlechange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC,CAFsB,CAEkB;;AAExCC,EAAAA,aAAa,CAACE,MAAD,CAAb,CAJsB,CAIA;AACV;;AAERJ,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,GAFQ,CAAT;AAGAD,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AAEJ,QAAMC,YAAY,GAAG,MAAM;AACvBH,IAAAA,SAAS,CAACD,MAAM,GAAC,CAAR,CAAT;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMI,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAtBD;;GAAML,W;UAIFD,a;;;KAJEC,W;AAwBN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport useCustomHook from '../customHook/useCustomHook';\n\n\n\nconst UseEffects1 = () => {\n\n    const [countn, setCountn] = useState(0);//useState woorking for re-render of whole component\n\n    useCustomHook(countn);// [] -> it means useEffect run at one time \n                // & [countn] -> it means useEffect run at a every moment when will change countn values\n\n        useEffect(()=>{\n            console.log(\"other useEffect\")\n        })\n        console.log('Hello outWorld');\n    \n    const handlechange = () => {\n        setCountn(countn+1)\n    }\n\n    return (\n        <div>\n            <h1>{countn}</h1>\n            <button onClick={() => handlechange()}>Click me</button>\n        </div>\n    )\n}\n\nexport default UseEffects1\n"]},"metadata":{},"sourceType":"module"}