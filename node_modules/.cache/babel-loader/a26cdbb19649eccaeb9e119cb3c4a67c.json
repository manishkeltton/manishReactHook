{"ast":null,"code":"var _jsxFileName = \"/var/www/html/manishReactHook/src/components/forms/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [allEntry, setAllEntry] = useState([]);\n\n  const submitForm = e => {\n    e.preventDefault(); //It is prevent auto refresh html page\n\n    if (email && password) {\n      const newEntry = {\n        id: new Date().getTime().toString(),\n        email: email,\n        password: password\n      }; // const newEntry = { id: new Date().getTime().toString(), email, password }\n\n      setAllEntry([...allEntry, newEntry]);\n      console.log(allEntry);\n      setEmail(\"\");\n      setPassword(\"\");\n    } else {\n      alert(\"Fill the Value\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          id: \"email\",\n          autoComplete: \"off\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: allEntry.map(curEl => {\n        //const { id, email, password } = curEl\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: curEl.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: curEl.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 32\n          }, this)]\n        }, curEl.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BasicForm, \"Hf7DJNcLIvncMlo9WMF7sU2/Axk=\");\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/var/www/html/manishReactHook/src/components/forms/BasicForm.js"],"names":["React","useState","BasicForm","email","setEmail","password","setPassword","allEntry","setAllEntry","submitForm","e","preventDefault","newEntry","id","Date","getTime","toString","console","log","alert","target","value","map","curEl"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMQ,UAAU,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF,GADsB,CACH;;AACnB,QAAGR,KAAK,IAAIE,QAAZ,EAAqB;AACjB,YAAMO,QAAQ,GAAG;AAAEC,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,EAAN;AAAuCb,QAAAA,KAAK,EAACA,KAA7C;AAAoDE,QAAAA,QAAQ,EAACA;AAA7D,OAAjB,CADiB,CAEjB;;AACAG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcK,QAAd,CAAD,CAAX;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACAH,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH,KAPD,MAOM;AACFa,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACH;AACJ,GAZD;;AAcA,sBACI;AAAA,4BACI;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,QAAQ,EAAEV,UAA1B;AAAA,8BACI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,EAAE,EAAC,OAAnC;AAA2C,UAAA,YAAY,EAAC,KAAxD;AACA,UAAA,KAAK,EAAEN,KADP;AAEA,UAAA,QAAQ,EAAGO,CAAD,IAAMN,QAAQ,CAACM,CAAC,CAACU,MAAF,CAASC,KAAV;AAFxB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,UAA5B;AAAuC,UAAA,EAAE,EAAC,UAA1C;AACA,UAAA,KAAK,EAAEhB,QADP;AAEA,UAAA,QAAQ,EAAGK,CAAD,IAAMJ,WAAW,CAACI,CAAC,CAACU,MAAF,CAASC,KAAV;AAF3B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAeI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAmBI;AAAA,gBAEOd,QAAQ,CAACe,GAAT,CAAcC,KAAD,IAAS;AAClB;AACA,4BACI;AAAA,kCACI;AAAA,sBAAIA,KAAK,CAACpB;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAIoB,KAAK,CAAClB;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAUkB,KAAK,CAACV,EAAhB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMH,OARD;AAFP;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA,kBADJ;AAqCH,CAxDD;;GAAMX,S;;KAAAA,S;AA0DN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst BasicForm = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [allEntry, setAllEntry] = useState([]);\n\n    const submitForm = (e) => {\n        e.preventDefault();//It is prevent auto refresh html page\n        if(email && password){\n            const newEntry = { id: new Date().getTime().toString(), email:email, password:password }\n            // const newEntry = { id: new Date().getTime().toString(), email, password }\n            setAllEntry([...allEntry, newEntry])\n            console.log(allEntry);\n            setEmail(\"\");\n            setPassword(\"\");\n        }else {\n            alert(\"Fill the Value\")\n        }\n    }\n\n    return (\n        <>\n            <form action=\"\" onSubmit={submitForm}>\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"text\" name=\"email\" id=\"email\" autoComplete=\"off\"\n                    value={email}\n                    onChange={(e)=> setEmail(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" name=\"password\" id=\"password\"\n                    value={password}\n                    onChange={(e)=> setPassword(e.target.value)}\n                    />\n                </div>\n                <button type=\"submit\">Login</button>\n            </form>\n\n            <div>\n                {\n                   allEntry.map((curEl)=>{\n                       //const { id, email, password } = curEl\n                       return(\n                           <div key={curEl.id}>  \n                               <p>{curEl.email}</p>\n                               <p>{curEl.password}</p>\n                           </div>\n                       )\n                   })\n\n                }\n            </div>\n\n        </>\n    )\n}\n\nexport default BasicForm\n"]},"metadata":{},"sourceType":"module"}